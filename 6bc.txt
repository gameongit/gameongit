6-b Write a C code for Linear Search.

#include<stdio.h>
#define size 5
intlinearsearch(int a[],int item)
{
	intpos=-1;
	intloc=0;
	for(loc=0;loc<size;loc++)
	{
		if(a[loc]==item)
		{
			pos=loc;
			break;
		}
	}
	return pos;
}
intmain()
{
	int a[size];
	inti=0,item,pos;
	for(i=0;i<size;i++)
	{
		printf("Enter Element:   ");
		scanf("%d",&a[i]);
	}
	printf("\nEnter Item to be serched:  ");
	scanf("%d",&item);
	pos=linearsearch(a,item);
	if(pos>=0)
		printf("\nElements Found At Position: %d\n",pos+1);
	else
		printf("\nItem Not Found in the list\n");
	return 0;
}
OUTPUT:
Enter Element:   5
Enter Element:   8
Enter Element:   9
Enter Element:   7
Enter Element:   6

Enter Item to be serched:  1

Item Not Found in the list
Enter Element:   7
Enter Element:   6
Enter Element:   2
Enter Element:   5
Enter Element:   1

Enter Item to be serched:  2

Elements Found At Position: 3

6-c  Write a C code for Binary Search.



#include<stdio.h>
#define size 5
int binarysearch(int a[],int item)
{
	int pos=-1,low=0,high=size,mid=0;
	while(low<=high)
	{
		mid=(low+high)/2;
		if(a[mid]==item)
		{
			pos=mid;
			break;
		}
		else if(item>a[mid])
			low=mid+1;
		else
			high=mid-1;
	}
	return pos;
}
int main()
{
	int a[size],i=0,item,pos;
	for(i=0;i<size;i++)
	{
		printf("Enter Element: ");
		scanf("%d",&a[i]);
	}
		printf("\nEnter Item To be Searched:  ");
		scanf("%d",&item);
		pos=binarysearch(a,item);
		if(pos>=0)
			printf("\nItem Found at Position: %d\n",pos+1);
		else
			printf("\nItem Not Found");
		return 0;
}


OUTPUT:-
Enter Element: 7
Enter Element: 5
Enter Element: 6
Enter Element: 2
Enter Element: 9

Enter Item To be Searched:  0

Item Not Found

Enter Element: 7
Enter Element: 3
Enter Element: 2
Enter Element: 0
Enter Element: 9

Enter Item To be Searched:  2

Item Found at Position: 3
